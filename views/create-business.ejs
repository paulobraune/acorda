<!DOCTYPE html>
<html lang="<%= i18n ? i18n.language : 'en' %>" dir="<%= ['ar', 'fa', 'he', 'ur'].includes(i18n.language) ? 'rtl' : 'ltr' %>">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Create Business | Tracklead</title>
  <!-- Theme Initialization Script - Must be first -->
  <script>
    (function() {
      const savedTheme = localStorage.getItem('theme') || 'dark';
      document.documentElement.setAttribute('data-theme', savedTheme);
      document.documentElement.style.transition = 'none';
      window.addEventListener('load', function() {
        setTimeout(function() {
          document.documentElement.style.transition = '';
        }, 50);
      });
    })();
  </script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <!-- Custom CSS Files -->
  <link rel="stylesheet" href="/css/variables.css" />
  <link rel="stylesheet" href="/css/base.css" />
  <link rel="stylesheet" href="/css/components.css" />
  <style>
    /* Login-specific styles */
    .create-business-page {
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      background: linear-gradient(135deg, var(--background) 0%, var(--background-gradient) 100%);
    }
    
    .create-business-card {
      background: var(--surface);
      border-radius: 16px;
      border: 1px solid var(--border);
      box-shadow: 0 10px 25px var(--shadow);
      width: 100%;
      max-width: 600px;
      padding: 2rem;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    
    .business-logo {
      margin-bottom: 2rem;
    }
    
    .business-logo img {
      height: 40px;
      transition: opacity 0.2s ease;
    }

    /* Steps indicator */
    .steps {
      display: flex;
      justify-content: space-between;
      margin-bottom: 2rem;
      position: relative;
    }

    .steps::before {
      content: '';
      position: absolute;
      top: 50%;
      left: 0;
      right: 0;
      height: 2px;
      background: var(--border);
      transform: translateY(-50%);
      z-index: 1;
    }

    .step {
      width: 2.5rem;
      height: 2.5rem;
      border-radius: 50%;
      background: var(--surface);
      border: 2px solid var(--border);
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: 600;
      position: relative;
      z-index: 2;
      transition: all 0.3s ease;
    }

    .step.active {
      background: var(--primary);
      border-color: var(--primary);
      color: white;
    }

    .step.completed {
      background: var(--primary);
      border-color: var(--primary);
      color: white;
    }

    /* Business type cards */
    .business-type-card {
      border: 2px solid var(--border);
      border-radius: 12px;
      padding: 1.5rem;
      cursor: pointer;
      transition: all 0.3s ease;
      margin-bottom: 1rem;
    }

    .business-type-card:hover {
      border-color: var(--primary);
      transform: translateY(-2px);
    }

    .business-type-card.selected {
      border-color: var(--primary);
      background: rgba(var(--primary-rgb), 0.1);
    }

    .business-type-card h3 {
      color: var(--text-primary);
      margin-bottom: 0.5rem;
      font-size: 1.25rem;
    }

    .business-type-card p {
      color: var(--text-secondary);
      margin-bottom: 0;
      font-size: 0.9rem;
    }

    /* Integration methods */
    .integration-card {
      border: 2px solid var(--border);
      border-radius: 12px;
      padding: 1.5rem;
      cursor: pointer;
      transition: all 0.3s ease;
      margin-bottom: 1rem;
      display: flex;
      align-items: center;
      gap: 1rem;
    }

    .integration-card:hover {
      border-color: var(--primary);
      transform: translateY(-2px);
    }

    .integration-card.selected {
      border-color: var(--primary);
      background: rgba(var(--primary-rgb), 0.1);
    }

    .integration-icon {
      width: 48px;
      height: 48px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 1.5rem;
      color: var(--primary);
    }

    /* Subscription plans */
    .plan-card {
      border: 2px solid var(--border);
      border-radius: 12px;
      padding: 2rem;
      cursor: pointer;
      transition: all 0.3s ease;
      margin-bottom: 1rem;
      text-align: center;
      height: 100%;
      display: flex;
      flex-direction: column;
      position: relative;
      overflow: hidden;
    }

    .plan-card:hover {
      border-color: var(--primary);
      transform: translateY(-2px);
      box-shadow: 0 10px 25px var(--shadow);
    }

    .plan-card.selected {
      border-color: var(--primary);
      background: rgba(var(--primary-rgb), 0.1);
    }

    .plan-card.popular::before {
      content: 'Most Popular';
      position: absolute;
      top: 12px;
      right: -30px;
      background: var(--primary);
      color: white;
      padding: 5px 40px;
      transform: rotate(45deg);
      font-size: 0.8rem;
      font-weight: 500;
    }

    .plan-name {
      font-size: 1.5rem;
      font-weight: 600;
      color: var(--text-primary);
      margin-bottom: 0.5rem;
    }

    .plan-description {
      color: var(--text-secondary);
      font-size: 0.9rem;
      margin-bottom: 1rem;
      flex-grow: 1;
    }

    .plan-price {
      font-size: 2rem;
      font-weight: 700;
      color: var(--text-primary);
      margin: 1rem 0;
      display: flex;
      align-items: baseline;
      justify-content: center;
      gap: 0.25rem;
    }

    .plan-price small {
      font-size: 1rem;
      font-weight: 400;
      color: var(--text-secondary);
    }

    .plan-price .currency {
      font-size: 1.25rem;
      font-weight: 500;
      color: var(--text-primary);
    }

    .plan-features {
      list-style: none;
      padding: 0;
      margin: 1rem 0;
      text-align: left;
      flex-grow: 1;
    }

    .plan-features li {
      color: var(--text-secondary);
      margin-bottom: 0.5rem;
      font-size: 0.9rem;
      display: flex;
      align-items: center;
    }

    .plan-features li i {
      color: var(--primary);
      margin-right: 0.5rem;
      font-size: 1rem;
      flex-shrink: 0;
    }

    /* Navigation buttons */
    .wizard-buttons {
      display: flex;
      justify-content: space-between;
      margin-top: 2rem;
    }

    .btn-prev {
      background-color: var(--surface-hover);
      border-color: var(--border);
      color: var(--text-primary);
    }

    .btn-prev:hover {
      background-color: var(--surface-accent);
      border-color: var(--border-accent);
      color: var(--text-primary);
    }

    .btn-next {
      background-color: var(--primary);
      border-color: var(--primary);
      color: white;
    }

    .btn-next:hover {
      background-color: var(--primary-dark);
      border-color: var(--primary-dark);
      color: white;
    }

    /* Form controls */
    .form-label {
      color: var(--text-primary);
      font-weight: 500;
      margin-bottom: 0.5rem;
    }

    .form-control {
      background-color: var(--surface-input);
      border: 1px solid var(--border);
      color: var(--text-primary);
      padding: 0.75rem 1rem;
    }

    .form-control:focus {
      background-color: var(--surface-input-focus);
      border-color: var(--primary);
      color: var(--text-primary);
      box-shadow: 0 0 0 0.2rem var(--primary-shadow);
    }
    
    .alert {
      border-radius: 8px;
      padding: 12px 16px;
      margin-bottom: 20px;
    }
    
    .alert-success {
      background-color: rgba(16, 185, 129, 0.15);
      color: #10B981;
      border: 1px solid rgba(16, 185, 129, 0.3);
    }
    
    .alert-danger {
      background-color: var(--error-bg);
      color: var(--error-text);
      border: 1px solid var(--error-border);
    }
    
    /* Language and theme toggles */
    .business-settings {
      position: absolute;
      top: 1rem;
      right: 1rem;
      display: flex;
      align-items: center;
      gap: 0.75rem;
    }

    .theme-toggle, 
    .language-toggle {
      background-color: var(--surface-hover);
      border: 0.0625rem solid var(--border);
      color: var(--text-primary);
      border-radius: 0.5rem;
      padding: 0.4rem 0.8rem;
      font-size: 0.875rem;
      cursor: pointer;
      transition: var(--transition);
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem;
      height: 2rem;
      min-width: 2rem;
    }

    .theme-toggle:hover,
    .language-toggle:hover {
      border-color: var(--primary);
      color: var(--primary);
    }

    .theme-toggle i,
    .language-toggle i {
      font-size: 1rem;
    }

    .flag {
      width: 1rem;
      height: 0.75rem;
      background-size: cover;
      background-position: center;
      border-radius: 0.125rem;
    }
    
    .uk-flag {
      background-image: url("/locales/flags/en.svg");
    }
    
    .br-flag {
      background-image: url("/locales/flags/pt-BR.svg");
    }

    .fr-flag {
      background-image: url("/locales/flags/fr.svg");
    }

    .es-flag {
      background-image: url("/locales/flags/es.svg");
    }

    .it-flag {
      background-image: url("/locales/flags/it.svg");
    }

    .de-flag {
      background-image: url("/locales/flags/de.svg");
    }
  </style>
</head>
<body>
  <div class="create-business-page">
    <!-- Language and Theme Toggles -->
    <div class="business-settings">
      <button class="theme-toggle" id="theme-toggle" aria-label="Change Theme">
        <i class="fas fa-sun"></i>
      </button>
      <button class="language-toggle" id="language-toggle" aria-label="<%= i18n.t('language.selectLanguage') %>">
        <% if (i18n.language === 'en') { %>
          <div class="flag uk-flag"></div>
          <span class="d-none d-sm-inline">EN</span>
        <% } else if (i18n.language === 'pt-BR') { %>
          <div class="flag br-flag"></div>
          <span class="d-none d-sm-inline">PT</span>
        <% } else if (i18n.language === 'fr') { %>
          <div class="flag fr-flag"></div>
          <span class="d-none d-sm-inline">FR</span>
        <% } else if (i18n.language === 'es') { %>
          <div class="flag es-flag"></div>
          <span class="d-none d-sm-inline">ES</span>
        <% } else if (i18n.language === 'it') { %>
          <div class="flag it-flag"></div>
          <span class="d-none d-sm-inline">IT</span>
        <% } else if (i18n.language === 'de') { %>
          <div class="flag de-flag"></div>
          <span class="d-none d-sm-inline">DE</span>
        <% } %>
      </button>
    </div>

    <div class="create-business-card">
      <div class="business-logo text-center">
        <script>
          (function() {
            const savedTheme = localStorage.getItem('theme') || 'dark';
            const logoSrc = savedTheme === 'light' 
              ? 'https://assets.tracklead.com/assets/logo-azul-preto.png' 
              : 'https://assets.tracklead.com/assets/logo-ciano-branco.png';
            document.write(`<img src="${logoSrc}" alt="Tracklead" class="img-fluid">`);
          })();
        </script>
      </div>

      <div id="alert-container"></div>

      <div class="steps mb-4">
        <div class="step active" data-step="1">1</div>
        <div class="step" data-step="2">2</div>
        <div class="step" data-step="3">3</div>
      </div>

      <form id="createBusinessForm">
        <!-- Step 1: Business Details -->
        <div class="step-content" id="step1">
          <h2 class="text-center mb-4">Business Details</h2>
          
          <div class="mb-4">
            <label class="form-label">Business Name</label>
            <input type="text" class="form-control" id="businessName" required>
          </div>

          <div class="business-types">
            <label class="form-label">Business Type</label>
            
            <div class="business-type-card" data-type="ecommerce">
              <h3><i class="fas fa-shopping-cart me-2"></i>E-commerce</h3>
              <p>Perfect for physical products, inventory management, and multiple payment methods.</p>
            </div>

            <div class="business-type-card" data-type="infoproducts">
              <h3><i class="fas fa-graduation-cap me-2"></i>Info Products</h3>
              <p>Ideal for digital products, courses, and subscription-based content.</p>
            </div>
          </div>
        </div>

        <!-- Step 2: Integration Method -->
        <div class="step-content d-none" id="step2">
          <h2 class="text-center mb-4">Choose Integration</h2>

          <div class="integration-card" data-integration="api">
            <div class="integration-icon">
              <i class="fas fa-code"></i>
            </div>
            <div>
              <h3>API Integration</h3>
              <p>Direct integration with your platform's API for real-time data sync.</p>
            </div>
          </div>

          <div class="integration-card" data-integration="pixel">
            <div class="integration-icon">
              <i class="fas fa-tag"></i>
            </div>
            <div>
              <h3>Pixel Tracking</h3>
              <p>Easy setup with our tracking pixel for basic analytics and conversions.</p>
            </div>
          </div>

          <div class="integration-card" data-integration="plugin">
            <div class="integration-icon">
              <i class="fas fa-puzzle-piece"></i>
            </div>
            <div>
              <h3>Plugin/Extension</h3>
              <p>One-click installation with our platform-specific plugins.</p>
            </div>
          </div>
        </div>

        <!-- Step 3: Subscription Plan -->
        <div class="step-content d-none" id="step3">
          <h2 class="text-center mb-4">Choose Your Plan</h2>

          <div class="row g-3">
            <div class="col-md-3">
              <div class="plan-card" data-plan="starter">
                <h3 class="plan-name">Starter</h3>
                <p class="plan-description">Perfect for small businesses just getting started</p>
                <div class="plan-price">
                  <span class="currency">$</span>29<small>/mo</small>
                </div>
                <ul class="plan-features">
                  <li><i class="fas fa-check"></i>Basic Analytics</li>
                  <li><i class="fas fa-check"></i>1 Business</li>
                  <li><i class="fas fa-check"></i>5,000 Monthly Views</li>
                  <li><i class="fas fa-check"></i>Email Support</li>
                </ul>
              </div>
            </div>

            <div class="col-md-3">
              <div class="plan-card" data-plan="growth">
                <h3 class="plan-name">Growth</h3>
                <p class="plan-description">For growing businesses needing more features</p>
                <div class="plan-price">
                  <span class="currency">$</span>79<small>/mo</small>
                </div>
                <ul class="plan-features">
                  <li><i class="fas fa-check"></i>Everything in Starter</li>
                  <li><i class="fas fa-check"></i>3 Businesses</li>
                  <li><i class="fas fa-check"></i>25,000 Monthly Views</li>
                  <li><i class="fas fa-check"></i>Priority Support</li>
                </ul>
              </div>
            </div>

            <div class="col-md-3">
              <div class="plan-card popular" data-plan="pro">
                <h3 class="plan-name">Professional</h3>
                <p class="plan-description">Advanced features for professional sellers</p>
                <div class="plan-price">
                  <span class="currency">$</span>149<small>/mo</small>
                </div>
                <ul class="plan-features">
                  <li><i class="fas fa-check"></i>Everything in Growth</li>
                  <li><i class="fas fa-check"></i>10 Businesses</li>
                  <li><i class="fas fa-check"></i>100,000 Monthly Views</li>
                  <li><i class="fas fa-check"></i>24/7 Priority Support</li>
                </ul>
              </div>
            </div>

            <div class="col-md-3">
              <div class="plan-card" data-plan="enterprise">
                <h3 class="plan-name">Enterprise</h3>
                <p class="plan-description">Custom solutions for large businesses</p>
                <div class="plan-price">
                  <span class="currency">$</span>299<small>/mo</small>
                </div>
                <ul class="plan-features">
                  <li><i class="fas fa-check"></i>Everything in Professional</li>
                  <li><i class="fas fa-check"></i>Unlimited Businesses</li>
                  <li><i class="fas fa-check"></i>Unlimited Monthly Views</li>
                  <li><i class="fas fa-check"></i>Dedicated Account Manager</li>
                </ul>
              </div>
            </div>
          </div>
        </div>

        <div class="wizard-buttons">
          <button type="button" class="btn btn-prev d-none">
            <i class="fas fa-arrow-left me-2"></i>Previous
          </button>
          <button type="button" class="btn btn-next">
            Next<i class="fas fa-arrow-right ms-2"></i>
          </button>
        </div>
      </form>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  
  <!-- Modal Components -->
  <div class="language-modal" id="language-modal" role="dialog" aria-labelledby="language-modal-title" aria-modal="true">
    <div class="language-modal-content">
      <div class="language-modal-header">
        <h5 class="language-modal-title" id="language-modal-title"><%= i18n.t('language.selectLanguage') %></h5>
      </div>
      <div class="language-modal-body">
        <div class="language-modal-option" onclick="changeLanguage('en')" tabindex="0" role="button" aria-pressed="<%= i18n.language === 'en' ? 'true' : 'false' %>" data-lang="en">
          <div class="flag uk-flag"></div>
          <div class="lang-name">
            <span class="lang-name-native"><%= i18n.t('language.names.en') %></span>
          </div>
        </div>
        <div class="language-modal-option" onclick="changeLanguage('pt-BR')" tabindex="0" role="button" aria-pressed="<%= i18n.language === 'pt-BR' ? 'true' : 'false' %>" data-lang="pt-BR">
          <div class="flag br-flag"></div>
          <div class="lang-name">
            <span class="lang-name-native"><%= i18n.t('language.names.pt-BR') %></span>
          </div>
        </div>
        <div class="language-modal-option" onclick="changeLanguage('fr')" tabindex="0" role="button" aria-pressed="<%= i18n.language === 'fr' ? 'true' : 'false' %>" data-lang="fr">
          <div class="flag fr-flag"></div>
          <div class="lang-name">
            <span class="lang-name-native"><%= i18n.t('language.names.fr') %></span>
          </div>
        </div>
        <div class="language-modal-option" onclick="changeLanguage('es')" tabindex="0" role="button" aria-pressed="<%= i18n.language === 'es' ? 'true' : 'false' %>" data-lang="es">
          <div class="flag es-flag"></div>
          <div class="lang-name">
            <span class="lang-name-native"><%= i18n.t('language.names.es') %></span>
          </div>
        </div>
        <div class="language-modal-option" onclick="changeLanguage('it')" tabindex="0" role="button" aria-pressed="<%= i18n.language === 'it' ? 'true' : 'false' %>" data-lang="it">
          <div class="flag it-flag"></div>
          <div class="lang-name">
            <span class="lang-name-native"><%= i18n.t('language.names.it') %></span>
          </div>
        </div>
        <div class="language-modal-option" onclick="changeLanguage('de')" tabindex="0" role="button" aria-pressed="<%= i18n.language === 'de' ? 'true' : 'false' %>" data-lang="de">
          <div class="flag de-flag"></div>
          <div class="lang-name">
            <span class="lang-name-native"><%= i18n.t('language.names.de') %></span>
          </div>
        </div>
      </div>
    </div>
  </div>
  <script src="/js/components/theme-modal.js"></script>
  <script src="/js/components/language-modal.js"></script>
  
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Initialize theme icons
      if (themeModal) {
        themeModal.updateThemeIcons();
      }
      
      let currentStep = 1;
      const form = document.getElementById('createBusinessForm');
      const prevBtn = document.querySelector('.btn-prev');
      const nextBtn = document.querySelector('.btn-next');
      const businessData = {
        step1: {},
        step2: {},
        step3: {}
      };

      // Handle business type selection
      document.querySelectorAll('.business-type-card').forEach(card => {
        card.addEventListener('click', () => {
          document.querySelectorAll('.business-type-card').forEach(c => c.classList.remove('selected'));
          card.classList.add('selected');
          businessData.step1.businessType = card.dataset.type;
        });
      });

      // Handle integration selection
      document.querySelectorAll('.integration-card').forEach(card => {
        card.addEventListener('click', () => {
          document.querySelectorAll('.integration-card').forEach(c => c.classList.remove('selected'));
          card.classList.add('selected');
          businessData.step2.integration = card.dataset.integration;
        });
      });

      // Handle plan selection
      document.querySelectorAll('.plan-card').forEach(card => {
        card.addEventListener('click', () => {
          document.querySelectorAll('.plan-card').forEach(c => c.classList.remove('selected'));
          card.classList.add('selected');
          businessData.step3.plan = card.dataset.plan;
        });
      });

      // Navigation buttons
      nextBtn.addEventListener('click', () => {
        if (validateStep(currentStep)) {
          if (currentStep < 3) {
            currentStep++;
            updateUI();
          } else {
            saveBusiness();
          }
        }
      });

      prevBtn.addEventListener('click', () => {
        if (currentStep > 1) {
          currentStep--;
          updateUI();
        }
      });

      function validateStep(step) {
        switch(step) {
          case 1:
            const businessName = document.getElementById('businessName').value;
            if (!businessName) {
              showAlert('danger', 'Please enter a business name');
              return false;
            }
            if (!businessData.step1.businessType) {
              showAlert('danger', 'Please select a business type');
              return false;
            }
            businessData.step1.businessName = businessName;
            return true;

          case 2:
            if (!businessData.step2.integration) {
              showAlert('danger', 'Please select an integration method');
              return false;
            }
            return true;

          case 3:
            if (!businessData.step3.plan) {
              showAlert('danger', 'Please select a subscription plan');
              return false;
            }
            return true;
        }
        return true;
      }

      function updateUI() {
        // Update steps
        document.querySelectorAll('.step').forEach(step => {
          const stepNum = parseInt(step.dataset.step);
          step.classList.remove('active', 'completed');
          if (stepNum === currentStep) {
            step.classList.add('active');
          } else if (stepNum < currentStep) {
            step.classList.add('completed');
            step.innerHTML = '<i class="fas fa-check"></i>';
          } else {
            step.innerHTML = stepNum;
          }
        });

        // Show/hide step content
        document.querySelectorAll('.step-content').forEach(content => {
          content.classList.add('d-none');
        });
        document.getElementById(`step${currentStep}`).classList.remove('d-none');

        // Update buttons
        prevBtn.classList.toggle('d-none', currentStep === 1);
        nextBtn.innerHTML = currentStep === 3 ? 
          'Create Business<i class="fas fa-check ms-2"></i>' : 
          'Next<i class="fas fa-arrow-right ms-2"></i>';
      }

      async function saveBusiness() {
        try {
          // Disable the button to prevent multiple submissions
          nextBtn.disabled = true;
          nextBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i> Creating...';
          
          // Prepare the data 
          const data = {
            businessName: businessData.step1.businessName,
            businessType: businessData.step1.businessType,
            integration: businessData.step2.integration,
            plan: businessData.step3.plan
          };
          
          // Send the request to the server
          const response = await fetch('/api/create-business', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
          });
          
          if (!response.ok) {
            const errorText = await response.text();
            throw new Error(`Server returned ${response.status}: ${response.statusText}`);
          }
          
          const result = await response.json();
          
          if (result.success) {
            showAlert('success', 'Business created successfully! Redirecting to dashboard...');
            
            // Redirect to dashboard after a short delay
            setTimeout(() => {
              window.location.href = '/overview';
            }, 1500);
          } else {
            // Server returned success:false
            showAlert('danger', result.message || 'Error creating business');
            nextBtn.disabled = false;
            nextBtn.innerHTML = 'Create Business<i class="fas fa-check ms-2"></i>';
          }
        } catch (error) {
          console.error("Error creating business:", error);
          showAlert('danger', error.message || 'An error occurred while creating the business');
          nextBtn.disabled = false;
          nextBtn.innerHTML = 'Create Business<i class="fas fa-check ms-2"></i>';
        }
      }
      
      // Helper function to show alerts
      function showAlert(type, message) {
        const alertContainer = document.getElementById('alert-container');
        const alert = document.createElement('div');
        alert.className = `alert alert-${type}`;
        alert.innerHTML = `
          <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'} me-2"></i>
          ${message}
        `;
        
        alertContainer.innerHTML = '';
        alertContainer.appendChild(alert);
      }
    });
  </script>
</body>
</html>