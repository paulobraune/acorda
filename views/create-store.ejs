<!DOCTYPE html>
<html lang="<%= i18n ? i18n.language : 'en' %>">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Create Store | Tracklead</title>
  <!-- Theme Initialization Script - Must be first -->
  <script>
    (function() {
      const savedTheme = localStorage.getItem('theme') || 'dark';
      document.documentElement.setAttribute('data-theme', savedTheme);
      document.documentElement.style.transition = 'none';
      window.addEventListener('load', function() {
        setTimeout(function() {
          document.documentElement.style.transition = '';
        }, 50);
      });
    })();
  </script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <!-- Custom CSS Files -->
  <link rel="stylesheet" href="/css/variables.css" />
  <link rel="stylesheet" href="/css/base.css" />
  <link rel="stylesheet" href="/css/components.css" />
  <style>
    .create-store-page {
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      background: linear-gradient(135deg, var(--background) 0%, var(--background-gradient) 100%);
    }
    
    .create-store-card {
      background: var(--surface);
      border-radius: 16px;
      border: 1px solid var(--border);
      box-shadow: 0 10px 25px var(--shadow);
      width: 100%;
      max-width: 600px;
      padding: 2rem;
    }
    
    .store-logo {
      margin-bottom: 2rem;
    }
    
    .store-logo img {
      height: 40px;
      transition: opacity 0.2s ease;
    }

    /* Steps indicator */
    .steps {
      display: flex;
      justify-content: space-between;
      margin-bottom: 2rem;
      position: relative;
    }

    .steps::before {
      content: '';
      position: absolute;
      top: 50%;
      left: 0;
      right: 0;
      height: 2px;
      background: var(--border);
      transform: translateY(-50%);
      z-index: 1;
    }

    .step {
      width: 2.5rem;
      height: 2.5rem;
      border-radius: 50%;
      background: var(--surface);
      border: 2px solid var(--border);
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: 600;
      position: relative;
      z-index: 2;
      transition: all 0.3s ease;
    }

    .step.active {
      background: var(--primary);
      border-color: var(--primary);
      color: white;
    }

    .step.completed {
      background: var(--primary);
      border-color: var(--primary);
      color: white;
    }

    /* Store type cards */
    .store-type-card {
      border: 2px solid var(--border);
      border-radius: 12px;
      padding: 1.5rem;
      cursor: pointer;
      transition: all 0.3s ease;
      margin-bottom: 1rem;
    }

    .store-type-card:hover {
      border-color: var(--primary);
      transform: translateY(-2px);
    }

    .store-type-card.selected {
      border-color: var(--primary);
      background: rgba(var(--primary-rgb), 0.1);
    }

    .store-type-card h3 {
      color: var(--text-primary);
      margin-bottom: 0.5rem;
      font-size: 1.25rem;
    }

    .store-type-card p {
      color: var(--text-secondary);
      margin-bottom: 0;
      font-size: 0.9rem;
    }

    /* Integration methods */
    .integration-card {
      border: 2px solid var(--border);
      border-radius: 12px;
      padding: 1.5rem;
      cursor: pointer;
      transition: all 0.3s ease;
      margin-bottom: 1rem;
      display: flex;
      align-items: center;
      gap: 1rem;
    }

    .integration-card:hover {
      border-color: var(--primary);
      transform: translateY(-2px);
    }

    .integration-card.selected {
      border-color: var(--primary);
      background: rgba(var(--primary-rgb), 0.1);
    }

    .integration-icon {
      width: 48px;
      height: 48px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 1.5rem;
      color: var(--primary);
    }

    /* Subscription plans */
    .plan-card {
      border: 2px solid var(--border);
      border-radius: 12px;
      padding: 2rem;
      cursor: pointer;
      transition: all 0.3s ease;
      margin-bottom: 1rem;
      text-align: center;
      height: 100%;
      display: flex;
      flex-direction: column;
      position: relative;
      overflow: hidden;
    }

    .plan-card:hover {
      border-color: var(--primary);
      transform: translateY(-2px);
      box-shadow: 0 10px 25px var(--shadow);
    }

    .plan-card.selected {
      border-color: var(--primary);
      background: rgba(var(--primary-rgb), 0.1);
    }

    .plan-card.popular::before {
      content: 'Most Popular';
      position: absolute;
      top: 12px;
      right: -30px;
      background: var(--primary);
      color: white;
      padding: 5px 40px;
      transform: rotate(45deg);
      font-size: 0.8rem;
      font-weight: 500;
    }

    .plan-name {
      font-size: 1.5rem;
      font-weight: 600;
      color: var(--text-primary);
      margin-bottom: 0.5rem;
    }

    .plan-description {
      color: var(--text-secondary);
      font-size: 0.9rem;
      margin-bottom: 1rem;
      flex-grow: 1;
    }

    .plan-price {
      font-size: 2rem;
      font-weight: 700;
      color: var(--text-primary);
      margin: 1rem 0;
      display: flex;
      align-items: baseline;
      justify-content: center;
      gap: 0.25rem;
    }

    .plan-price small {
      font-size: 1rem;
      font-weight: 400;
      color: var(--text-secondary);
    }

    .plan-price .currency {
      font-size: 1.25rem;
      font-weight: 500;
      color: var(--text-primary);
    }

    .plan-features {
      list-style: none;
      padding: 0;
      margin: 1rem 0;
      text-align: left;
      flex-grow: 1;
    }

    .plan-features li {
      color: var(--text-secondary);
      margin-bottom: 0.5rem;
      font-size: 0.9rem;
      display: flex;
      align-items: center;
    }

    .plan-features li i {
      color: var(--primary);
      margin-right: 0.5rem;
      font-size: 1rem;
      flex-shrink: 0;
    }

    /* Navigation buttons */
    .wizard-buttons {
      display: flex;
      justify-content: space-between;
      margin-top: 2rem;
    }

    .btn-prev {
      background-color: var(--surface-hover);
      border-color: var(--border);
      color: var(--text-primary);
    }

    .btn-prev:hover {
      background-color: var(--surface-accent);
      border-color: var(--border-accent);
      color: var(--text-primary);
    }

    .btn-next {
      background-color: var(--primary);
      border-color: var(--primary);
      color: white;
    }

    .btn-next:hover {
      background-color: var(--primary-dark);
      border-color: var(--primary-dark);
      color: white;
    }

    /* Form controls */
    .form-label {
      color: var(--text-primary);
      font-weight: 500;
      margin-bottom: 0.5rem;
    }

    .form-control {
      background-color: var(--surface-input);
      border: 1px solid var(--border);
      color: var(--text-primary);
      padding: 0.75rem 1rem;
    }

    .form-control:focus {
      background-color: var(--surface-input-focus);
      border-color: var(--primary);
      color: var(--text-primary);
      box-shadow: 0 0 0 0.2rem var(--primary-shadow);
    }
  </style>
</head>
<body>
  <div class="create-store-page">
    <div class="create-store-card">
      <div class="store-logo text-center">
        <script>
          (function() {
            const savedTheme = localStorage.getItem('theme') || 'dark';
            const logoSrc = savedTheme === 'light' 
              ? 'https://assets.tracklead.com/assets/logo-azul-preto.png' 
              : 'https://assets.tracklead.com/assets/logo-ciano-branco.png';
            document.write(`<img src="${logoSrc}" alt="Tracklead" class="img-fluid">`);
          })();
        </script>
      </div>

      <div class="steps mb-4">
        <div class="step active" data-step="1">1</div>
        <div class="step" data-step="2">2</div>
        <div class="step" data-step="3">3</div>
      </div>

      <form id="createStoreForm">
        <!-- Step 1: Store Details -->
        <div class="step-content" id="step1">
          <h2 class="text-center mb-4">Store Details</h2>
          
          <div class="mb-4">
            <label class="form-label">Store Name</label>
            <input type="text" class="form-control" id="storeName" required>
          </div>

          <div class="store-types">
            <label class="form-label">Store Type</label>
            
            <div class="store-type-card" data-type="ecommerce">
              <h3><i class="fas fa-shopping-cart me-2"></i>E-commerce</h3>
              <p>Perfect for physical products, inventory management, and multiple payment methods.</p>
            </div>

            <div class="store-type-card" data-type="infoproducts">
              <h3><i class="fas fa-graduation-cap me-2"></i>Info Products</h3>
              <p>Ideal for digital products, courses, and subscription-based content.</p>
            </div>
          </div>
        </div>

        <!-- Step 2: Integration Method -->
        <div class="step-content d-none" id="step2">
          <h2 class="text-center mb-4">Choose Integration</h2>

          <div class="integration-card" data-integration="api">
            <div class="integration-icon">
              <i class="fas fa-code"></i>
            </div>
            <div>
              <h3>API Integration</h3>
              <p>Direct integration with your platform's API for real-time data sync.</p>
            </div>
          </div>

          <div class="integration-card" data-integration="pixel">
            <div class="integration-icon">
              <i class="fas fa-tag"></i>
            </div>
            <div>
              <h3>Pixel Tracking</h3>
              <p>Easy setup with our tracking pixel for basic analytics and conversions.</p>
            </div>
          </div>

          <div class="integration-card" data-integration="plugin">
            <div class="integration-icon">
              <i class="fas fa-puzzle-piece"></i>
            </div>
            <div>
              <h3>Plugin/Extension</h3>
              <p>One-click installation with our platform-specific plugins.</p>
            </div>
          </div>
        </div>

        <!-- Step 3: Subscription Plan -->
        <div class="step-content d-none" id="step3">
          <h2 class="text-center mb-4">Choose Your Plan</h2>

          <div class="row g-3">
            <div class="col-md-3">
              <div class="plan-card" data-plan="starter">
                <h3 class="plan-name">Starter</h3>
                <p class="plan-description">Perfect for small businesses just getting started</p>
                <div class="plan-price">
                  <span class="currency">$</span>29<small>/mo</small>
                </div>
                <ul class="plan-features">
                  <li><i class="fas fa-check"></i>Basic Analytics</li>
                  <li><i class="fas fa-check"></i>1 Store</li>
                  <li><i class="fas fa-check"></i>5,000 Monthly Views</li>
                  <li><i class="fas fa-check"></i>Email Support</li>
                </ul>
              </div>
            </div>

            <div class="col-md-3">
              <div class="plan-card" data-plan="growth">
                <h3 class="plan-name">Growth</h3>
                <p class="plan-description">For growing businesses needing more features</p>
                <div class="plan-price">
                  <span class="currency">$</span>79<small>/mo</small>
                </div>
                <ul class="plan-features">
                  <li><i class="fas fa-check"></i>Everything in Starter</li>
                  <li><i class="fas fa-check"></i>3 Stores</li>
                  <li><i class="fas fa-check"></i>25,000 Monthly Views</li>
                  <li><i class="fas fa-check"></i>Priority Support</li>
                </ul>
              </div>
            </div>

            <div class="col-md-3">
              <div class="plan-card popular" data-plan="pro">
                <h3 class="plan-name">Professional</h3>
                <p class="plan-description">Advanced features for professional sellers</p>
                <div class="plan-price">
                  <span class="currency">$</span>149<small>/mo</small>
                </div>
                <ul class="plan-features">
                  <li><i class="fas fa-check"></i>Everything in Growth</li>
                  <li><i class="fas fa-check"></i>10 Stores</li>
                  <li><i class="fas fa-check"></i>100,000 Monthly Views</li>
                  <li><i class="fas fa-check"></i>24/7 Priority Support</li>
                </ul>
              </div>
            </div>

            <div class="col-md-3">
              <div class="plan-card" data-plan="enterprise">
                <h3 class="plan-name">Enterprise</h3>
                <p class="plan-description">Custom solutions for large businesses</p>
                <div class="plan-price">
                  <span class="currency">$</span>299<small>/mo</small>
                </div>
                <ul class="plan-features">
                  <li><i class="fas fa-check"></i>Everything in Professional</li>
                  <li><i class="fas fa-check"></i>Unlimited Stores</li>
                  <li><i class="fas fa-check"></i>Unlimited Monthly Views</li>
                  <li><i class="fas fa-check"></i>Dedicated Account Manager</li>
                </ul>
              </div>
            </div>
          </div>
        </div>

        <div class="wizard-buttons">
          <button type="button" class="btn btn-prev d-none">
            <i class="fas fa-arrow-left me-2"></i>Previous
          </button>
          <button type="button" class="btn btn-next">
            Next<i class="fas fa-arrow-right ms-2"></i>
          </button>
        </div>
      </form>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      let currentStep = 1;
      const form = document.getElementById('createStoreForm');
      const prevBtn = document.querySelector('.btn-prev');
      const nextBtn = document.querySelector('.btn-next');
      const storeData = {
        step1: {},
        step2: {},
        step3: {}
      };

      // Handle store type selection
      document.querySelectorAll('.store-type-card').forEach(card => {
        card.addEventListener('click', () => {
          document.querySelectorAll('.store-type-card').forEach(c => c.classList.remove('selected'));
          card.classList.add('selected');
          storeData.step1.storeType = card.dataset.type;
        });
      });

      // Handle integration selection
      document.querySelectorAll('.integration-card').forEach(card => {
        card.addEventListener('click', () => {
          document.querySelectorAll('.integration-card').forEach(c => c.classList.remove('selected'));
          card.classList.add('selected');
          storeData.step2.integration = card.dataset.integration;
        });
      });

      // Handle plan selection
      document.querySelectorAll('.plan-card').forEach(card => {
        card.addEventListener('click', () => {
          document.querySelectorAll('.plan-card').forEach(c => c.classList.remove('selected'));
          card.classList.add('selected');
          storeData.step3.plan = card.dataset.plan;
        });
      });

      // Navigation buttons
      nextBtn.addEventListener('click', () => {
        if (validateStep(currentStep)) {
          if (currentStep < 3) {
            currentStep++;
            updateUI();
          } else {
            saveStore();
          }
        }
      });

      prevBtn.addEventListener('click', () => {
        if (currentStep > 1) {
          currentStep--;
          updateUI();
        }
      });

      function validateStep(step) {
        switch(step) {
          case 1:
            const storeName = document.getElementById('storeName').value;
            if (!storeName) {
              alert('Please enter a store name');
              return false;
            }
            if (!storeData.step1.storeType) {
              alert('Please select a store type');
              return false;
            }
            storeData.step1.storeName = storeName;
            return true;

          case 2:
            if (!storeData.step2.integration) {
              alert('Please select an integration method');
              return false;
            }
            return true;

          case 3:
            if (!storeData.step3.plan) {
              alert('Please select a subscription plan');
              return false;
            }
            return true;
        }
        return true;
      }

      function updateUI() {
        // Update steps
        document.querySelectorAll('.step').forEach(step => {
          const stepNum = parseInt(step.dataset.step);
          step.classList.remove('active', 'completed');
          if (stepNum === currentStep) {
            step.classList.add('active');
          } else if (stepNum < currentStep) {
            step.classList.add('completed');
            step.innerHTML = '<i class="fas fa-check"></i>';
          } else {
            step.innerHTML = stepNum;
          }
        });

        // Show/hide step content
        document.querySelectorAll('.step-content').forEach(content => {
          content.classList.add('d-none');
        });
        document.getElementById(`step${currentStep}`).classList.remove('d-none');

        // Update buttons
        prevBtn.classList.toggle('d-none', currentStep === 1);
        nextBtn.innerHTML = currentStep === 3 ? 
          'Create Store<i class="fas fa-check ms-2"></i>' : 
          'Next<i class="fas fa-arrow-right ms-2"></i>';
      }

      function saveStore() {
        const store = {
          id: 'store_' + Date.now(),
          name: storeData.step1.storeName,
          type: storeData.step1.storeType,
          integration: storeData.step2.integration,
          plan: storeData.step3.plan,
          createdAt: new Date().toISOString(),
          status: 'active'
        };

        // Save to localStorage
        const stores = JSON.parse(localStorage.getItem('stores') || '[]');
        stores.push(store);
        localStorage.setItem('stores', JSON.stringify(stores));

        // Redirect to dashboard
        window.location.href = '/overview';
      }
    });
  </script>
</body>
</html>